{"version":3,"file":"blocks/columns/index.js","mappings":"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","sources":["webpack://dynamic-block/./src/blocks/columns/edit.js","webpack://dynamic-block/./src/blocks/columns/save.js","webpack://dynamic-block/./src/blocks/columns/editor.scss","webpack://dynamic-block/external window [\"wp\",\"blockEditor\"]","webpack://dynamic-block/external window [\"wp\",\"blocks\"]","webpack://dynamic-block/external window [\"wp\",\"data\"]","webpack://dynamic-block/external window [\"wp\",\"element\"]","webpack://dynamic-block/external window [\"wp\",\"i18n\"]","webpack://dynamic-block/webpack/bootstrap","webpack://dynamic-block/webpack/runtime/compat get default export","webpack://dynamic-block/webpack/runtime/define property getters","webpack://dynamic-block/webpack/runtime/hasOwnProperty shorthand","webpack://dynamic-block/webpack/runtime/make namespace object","webpack://dynamic-block/./src/blocks/columns/index.js"],"sourcesContent":["/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\r\n */\r\nimport { __ } from \"@wordpress/i18n\";\r\n\r\n/**\r\n * React hook that is used to mark the block wrapper element.\r\n * It provides all the necessary props like the class name.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\r\n */\r\nimport {\r\n\tuseBlockProps,\r\n\tColorPalette,\r\n\tInspectorControls,\r\n\tInnerBlocks,\r\n} from \"@wordpress/block-editor\";\r\nimport { useSelect } from \"@wordpress/data\";\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * Those files can contain any CSS code that gets applied to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport \"./editor.scss\";\r\n\r\n/**\r\n * The edit function describes the structure of your block in the context of the\r\n * editor. This represents what the editor will render when the block is used.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\r\n *\r\n * @return {WPElement} Element to render.\r\n */\r\nexport default function Edit({\r\n\tattributes: { bgColor, textColor },\r\n\tsetAttributes,\r\n}) {\r\n\tconst posts = useSelect((select) => {\r\n\t\treturn select(\"core\").getEntityRecords(\"postType\", \"post\", {\r\n\t\t\tper_page: 10,\r\n\t\t});\r\n\t}, []);\r\n\tconsole.log(posts);\r\n\r\n\tconst onChangeBGColor = (hexColor) => {\r\n\t\tsetAttributes({ bgColor: hexColor });\r\n\t};\r\n\tconst onChangeTextColor = (newColor) => {\r\n\t\tsetAttributes({ textColor: newColor });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div {...useBlockProps()}>\r\n\t\t\t<InspectorControls key=\"setting\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend className=\"blocks-base-control__label\">\r\n\t\t\t\t\t\t{__(\"Background Color\")}\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t<ColorPalette onChange={onChangeBGColor} />\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend className=\"blocks-base-control__label\">\r\n\t\t\t\t\t\t{__(\"Text Color\")}\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t<ColorPalette onChange={onChangeTextColor} />\r\n\t\t\t\t</fieldset>\r\n\t\t\t</InspectorControls>\r\n\t\t\t<InnerBlocks\r\n\t\t\t\ttemplate={[\r\n\t\t\t\t\t[\"create-block/column\", {}],\r\n\t\t\t\t\t[\"create-block/column\", {}],\r\n\t\t\t\t]}\r\n\t\t\t\tallowedBlocks={[\"create-block/column\"]}\r\n\t\t\t\ttemplateLock=\"all\"\r\n\t\t\t\torientation=\"horizontal\"\r\n\t\t\t\tclassName=\"dynamic-column-block\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useBlockProps, InnerBlocks } from \"@wordpress/block-editor\";\r\n\r\nexport default function Save() {\r\n\t<div {...useBlockProps.save()}>\r\n\t\t<InnerBlocks.Content />\r\n\t</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\r\n */\r\nimport { registerBlockType } from \"@wordpress/blocks\";\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * All files containing `style` keyword are bundled together. The code used\r\n * gets applied both to the front of your site and to the editor. All other files\r\n * get applied to the editor only.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport \"./editor.scss\";\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Edit from \"./edit\";\r\nimport Save from \"./save\";\r\nimport metadata from \"./block.json\";\r\n\r\n/**\r\n * Every block starts by registering a new block type definition.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\r\n */\r\nconsole.log('abc');\r\n(() => {\r\n  registerBlockType(\"create-block/columns\", {\r\n    category: \"Dynamic Blocks\",\r\n    ...metadata,\r\n    edit: Edit,\r\n    save: Save\r\n  });\r\n})();\r\n"],"names":["__","useBlockProps","ColorPalette","InspectorControls","InnerBlocks","useSelect","Edit","attributes","bgColor","textColor","setAttributes","posts","select","getEntityRecords","per_page","console","log","onChangeBGColor","hexColor","onChangeTextColor","newColor","createElement","key","className","onChange","template","allowedBlocks","templateLock","orientation","Save","save","Content","registerBlockType","metadata","category","edit"],"sourceRoot":""}